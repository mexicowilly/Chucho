#MACRO(CHUCHO_APPEND_NON_PKG_CONFIG_DEPS CHUCHO_LIBRARY_VAR)
#    FOREACH(LIB ${CHUCHO_LIBARY_VAR})
#        GET_FILENAME_COMPONENT(CHUCHO_LOCAL_LIB_PART ${LIB} DIRECTORY)
#        LIST(APPEND CHUCHO_NON_PKG_CONFIG_DEPS "-L${CHUCHO_LOCAL_LIB_PART}")
#        GET_FILENAME_COMPONENT(CHUCHO_LOCAL_LIB_PART ${LIB} NAME_WE)
#        STRING(SUBSTRING ${CHUCHO_LOCAL_LIB_PART} 3 -1 CHUCHO_LOCAL_LIB_PART)
#        LIST(APPEND CHUCHO_NON_PKG_CONFIG_DEPS "-l${CHUCHO_LOCAL_LIB_PART}")
#    ENDFOREACH()
#ENDMACRO()

MACRO(CHUCHO_GENERATE_PKG_CONFIG_FILE)
    IF(PKG_CONFIG_FOUND)
        IF(CURL_FOUND)
            LIST(APPEND CHUCHO_PKG_CONFIG_PUBLIC_DEPS libcurl)
        ENDIF()
        IF(RUBY_FOUND)
            LIST(APPEND CHUCHO_PKG_CONFIG_PRIVATE_DEPS ruby)
        ENDIF()
        IF(RUBY_FOUND)
            LIST(APPEND CHUCHO_PKG_CONFIG_PRIVATE_DEPS protobuf)
        ENDIF()
        IF(CHUCHO_HAVE_CAPN_PROTO)
            LIST(APPEND CHUCHO_PKG_CONFIG_PRIVATE_DEPS capnp)
        ENDIF()
        IF(ZLIB_FOUND)
            LIST(APPEND CHUCHO_PKG_CONFIG_PRIVATE_DEPS zlib)
        ENDIF()
        IF(BZIP2_FOUND)
            LIST(APPEND CHUCHO_NON_PKG_CONFIG_DEPS ${BZIP2_LIBRARIES})
        ENDIF()
        IF(CHUCHO_HAVE_LIBARCHIVE)
            LIST(APPEND CHUCHO_PKG_CONFIG_PRIVATE_DEPS libarchive)
        ENDIF()
        IF(CHUCHO_HAVE_SQLITE)
            LIST(APPEND CHUCHO_PKG_CONFIG_PUBLIC_DEPS sqlite3)
        ENDIF()
        IF(CHUCHO_HAVE_ORACLE)
            LIST(APPEND CHUCHO_NON_PKG_CONFIG_DEPS ${ORACLE_LIBS})
            LIST(APPEND CHUCHO_NON_PKG_CONFIG_CLFAGS "-I${ORACLE_INCLUDE_DIR}")
        ENDIF()
        IF(CHUCHO_HAVE_MYSQL)
            LIST(APPEND CHUCHO_PKG_CONFIG_PRIVATE_DEPS mysqlclient)
        ENDIF()
        IF(CHUCHO_HAVE_POSTGRES)
            LIST(APPEND CHUCHO_PKG_CONFIG_PUBLIC_DEPS libpq)
        ENDIF()
        IF(CHUCHO_HAVE_DB2)
            LIST(APPEND CHUCHO_NON_PKG_CONFIG_DEPS ${DB2_LIBS})
            LIST(APPEND CHUCHO_NON_PKG_CONFIG_CLFAGS "-I${DB2_INCLUDE_DIR}")
        ENDIF()
        IF(CHUCHO_HAVE_ZEROMQ)
            LIST(APPEND CHUCHO_PKG_CONFIG_PRIVATE_DEPS libzmq)
        ENDIF()
        IF(CHUCHO_HAVE_ACTIVEMQ)
            LIST(APPEND CHUCHO_NON_PKG_CONFIG_DEPS ${ACTIVEMQ_LIBS})
            LIST(APPEND CHUCHO_NON_PKG_CONFIG_CLFAGS "-I${ACTIVEMQ_INCLUDE_DIR}")
        ENDIF()
        IF(CHUCHO_HAVE_RABBITMQ)
            LIST(APPEND CHUCHO_PKG_CONFIG_PUBLIC_DEPS librabbitmq)
        ENDIF()
        IF(DEFINED CHUCHO_NON_PKG_CONFIG_DEPS)
            LIST(REMOVE_DUPLICATES CHUCHO_NON_PKG_CONFIG_DEPS)
        ENDIF()
        IF(DEFINED CHUCHO_NON_PKG_CONFIG_CFLAGS)
            LIST(REMOVE_DUPLICATES CHUCHO_NON_PKG_CONFIG_CFLAGS)
        ENDIF()
        STRING(REPLACE ";" " " CHUCHO_NON_PKG_CONFIG_DEPS "${CHUCHO_NON_PKG_CONFIG_DEPS}")
        STRING(REPLACE ";" " " CHUCHO_NON_PKG_CONFIG_CFLAGS "${CHUCHO_NON_PKG_CONFIG_CFLAGS}")
        STRING(REPLACE ";" " " CHUCHO_PKG_CONFIG_PUBLIC_DEPS "${CHUCHO_PKG_CONFIG_PUBLIC_DEPS}")
        STRING(REPLACE ";" " " CHUCHO_PKG_CONFIG_PRIVATE_DEPS "${CHUCHO_PKG_CONFIG_PRIVATE_DEPS}")
        CONFIGURE_FILE(libchucho.pc.in "${CMAKE_BINARY_DIR}/libchucho.pc" @ONLY)
        INSTALL(FILES "${CMAKE_BINARY_DIR}/libchucho.pc" DESTINATION lib/pkgconfig)
    ENDIF()
ENDMACRO()