Chucho Installation
===================

Prerequisites
=============
    Chucho requires that CMake version 2.8.10 or later be installed. You
may download CMake from http://www.cmake.org.

    At present Chucho is only known to work with compilers clang 4.2.1,
and later, g++ 4.7 and later, and Microsoft Visual Studio 2012 and later.

Compression
===========
    Chucho supports rolling to compressed files. The supported formats
are gzip, bzip2 and zip archive. In order to make use of this feature,
you must specify how you wish Chucho to make use of the compression
libraries. Each library has its own settings.
    The following settings are all done on the CMake command line using
the -D option, as in -DZLIB_URL=http://my/special/zlib.tar.gz.

    Zlib (gzip support)
    -------------------
        In order to embed the zlib sources into the Chucho library
    itself, thus eliminating the need for external linkage by an
    executable later, you may do one of the following three things:

        * Set ZLIB_URL to the URL from which to retrieve the zlib
          tarball.
        * Set ZLIB_PACKAGE to the name of the zlib package on your file
          system.
        * Set ZLIB_SOURCE to the name of the directory containing the
          already unpacked sources of the zlib tarball.

        In order to use zlib as an external library to which your
    executable must subsequently be linked, do one of the following two
    things:

        * Set both ZLIB_INCLUDE_DIR and ZLIB_LIB_DIR to the locations
          of the zlib.h header and the libz library, respectively.
        * Set nothing and let CMake try and find an existing zlib on
          your system.

        To completely disable zlib support, do the following:

        * Set DISABLE_ZLIB=TRUE

    Bzip2 (bzip2 support)
    ---------------------
        In order to embed the bzip2 sources into the Chucho library
    itself, thus eliminating the need for external linkage by an
    executable later, you may do one of the following three things:

        * Set BZIP2_URL to the URL from which to retrieve the bzip2
          tarball.
        * Set BZIP2_PACKAGE to the name of the bzip2 package on your
          file system.
        * Set BZIP2_SOURCE to the name of the directory containing the
          already unpacked sources of the bzip2 tarball.

        In order to use bzip2 as an external library to which your
    executable must subsequently be linked, do one of the following two
    things:

        * Set both BZIP2_INCLUDE_DIR and BZIP2_LIB_DIR to the locations
          of the bzlib.h header and the libbz2 library, respectively.
        * Set nothing and let CMake try and find an existing bzip2 on
          your system.

        To completely disable bzip2 support, do the following:

        * Set DISABLE_BZIP2=TRUE

    Minizip (zip archive support)
    -----------------------------
        Support for external linkage of minizip is not supported, since
    the minizip build does not even support a library target.
    Additionally, minizip is dependent on zlib, so you must have a
    usable zlib in order to have a usable minizip. You have three
    options for embedding the minizip sources into the Chucho library in
    order to support zip archive compression:

        * Set MINIZIP_URL to the URL from which to retrieve the minizip
          archive.
        * Set MINIZIP_PACKAGE to the name of the minizip archive on your
          file system.
        * Set MINIZIP_SOURCE to the name of the directory containing the
          already unpacked sources of the minizip archive.

Build
=====
    Chucho can be built with the following commands, run from the source
directory:

    $ cmake .
    $ make
    $ make install

    Here are some interesting options for CMake that can affect the
build in addition to the compression options mentioned above. You set
these with the command-line switch -D, as in
-DCMAKE_INSTALL_PREFIX=/my/special/location.

    * ENABLE_SHARED: (ON or OFF) Whether you prefer to have a shared
      object over a static library. The default is OFF.   
    * ENABLE_FRAMEWORK: (ON or OFF) Whether you prefer to have a
      framework on the Macintosh operating system. If you choose to
      build a framework, then it will be installed to
      /Library/Frameworks. Otherwise, the library will be installed to
      the location of CMAKE_INSTALL_PREFIX. The default is ON.
    * CMAKE_INSTALL_PREFIX: (A directory) If you would like to install
      Chucho to a particular location, you may set it here. The default
      is /usr/local on POSIX systems and C:\Program Files (x86)\chucho
      on Windows.
    * INSTALL_SERVICE: (ON or OFF) Whether you want the install target
      to install the chuchod log server as a system service on
      platforms that support system services. The default is ON.
    * Any of the aforementioned compression options for enabling
      support for rolling to compressed files.
